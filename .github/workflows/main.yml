name: Build and Deploy to GKE

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GAR_LOCATION: us-central1
  GKE_CLUSTER: autopilot-cluster-1
  GKE_ZONE: us-central1
  DEPLOYMENT_NAME: nginx-deployment
  REPOSITORY: samples
  IMAGE: static-site

jobs:
  # build-publish:
  #   name: Build and Publish
  #   runs-on: ubuntu-latest
  #   environment: production

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - id: auth
  #       uses: "google-github-actions/auth@v2"
  #       with:
  #         credentials_json: "${{ secrets.GCP_CREDENTIALS }}"

  #     - uses: google-github-actions/setup-gcloud@v2

  #     - name: Docker configuration
  #       run: |-
  #         gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://$GAR_LOCATION-docker.pkg.dev

  #     - name: Build
  #       run: |-
  #         docker build \
  #           --tag "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA" \
  #           --build-arg GITHUB_SHA="$GITHUB_SHA" \
  #           --build-arg GITHUB_REF="$GITHUB_REF" \
  #           .
  #     - name: Publish
  #       run: |-
  #         docker push "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA"

  deploy:
    name: Deploy
    runs-on: arc-runner-set
    environment: production

    permissions:
      id-token: write
      contents: read
      actions: read

    # permissions:
    #   contents: "read"
    #   id-token: "write"sadasda

    steps:
      # Alternative option - authentication via credentials json
      - id: auth
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.GCP_CREDENTIALS }}"

      # Setup gcloud CLI
      # - uses: google-github-actions/setup-gcloud@v2

      # - name: Install kubectl
      #   run: |-
      #     gcloud components install kubectl

      - uses: azure/setup-kubectl@v3
        with:
          version: "latest"

      # # Set up kustomize
      # - name: Set up Kustomize
      #   run: |-
      #     curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
      #     chmod u+x ./kustomize

      # # Deploy the Docker image to the GKE cluster
      # ./kustomize edit set image LOCATION-docker.pkg.dev/PROJECT_ID/REPOSITORY/IMAGE:TAG=$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA
      # ./kustomize build . | kubectl apply -f -

      # Get the GKE credentials so we can deploy to the cluster
      - uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}

      - id: "get-pods"
        run: "kubectl config view"

        # - name: Deploy
        # run: |-
        #   echo $KUBECONFIG

      # kubectl apply --validate=false -f deployment
      # kubectl rollout status deployment/$DEPLOYMENT_NAME
      # kubectl get services -o wide
